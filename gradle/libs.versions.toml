[versions]
agp = "8.9.0"
desugar_jdk_libs = "2.1.5"
googleServices = "4.4.2"
kotlin = "2.1.21"
compose-plugin = "1.8.0"
compose = "1.8.2"
compose_backhandle = "1.8.0"
compose-material3 = "1.3.2"
androidx-activityCompose = "1.10.1"
ktor = "3.1.3"
koin = "4.0.3"
sqldelight = "2.0.1"
kotlinx-serialization = "1.8.1"
kotlinx-coroutines = "1.10.2"
kotlinx-datetime = "0.6.2"
stately = "2.1.0"
kotlinStdlib = "2.1.21"
runner = "1.6.2"
core = "1.6.1"
junit = "1.2.1"
lifecycle-viewmodel-compose = "2.8.4"
landscapist-coil = "2.4.8"
firebase = "2.1.0"
androidx-lifecycle = "2.9.0-beta01"
androidx-navigation = "2.9.0-beta01"
kotlinInject = "0.7.2"
ksp = "2.1.20-2.0.1"
datastore = "1.1.7"
room = "2.7.1"
#new navigation
nav3Core = "1.0.0-alpha03"
material3AdaptiveNav3 = "1.0.0-SNAPSHOT"
lifecycleViewmodelNav3 = "1.0.0-alpha01"
composeShimmer = "1.3.2"
connectivity = "1.2.0"
kotlinSerialization = "2.1.21"
kotlinxSerializationCore = "1.8.1"
google-service = "4.4.2"
crashlytics_plugin = "3.0.3"
filekit = "0.10.0-beta04"

buildKonfig = "0.17.1"
buildConfig = "5.4.0"
sqlite = "2.5.1"

[libraries]
#view model
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
desugar_jdk_libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar_jdk_libs" }
google-services = { module = "com.google.gms:google-services", version.ref = "googleServices" }
kotlinInject = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlinInject" }
kotlinInjectKsp = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlinInject" }

kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
landscapist-coil = { module = "com.github.skydoves:landscapist-coil3", version.ref = "landscapist-coil" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-timeout = { module = "io.ktor:ktor-client-timeout", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }

# SQLDelight
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }

# Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-core-viewmodel = { module = "io.insert-koin:koin-core-viewmodel", version.ref ="koin" }
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref ="koin" }

# KotlinX
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

# Stately
stately-common = { module = "co.touchlab:stately-common", version.ref = "stately" }
stately-concurrent = { module = "co.touchlab:stately-concurrent-collections", version.ref = "stately" }
stately-isolate = { module = "co.touchlab:stately-iso-collections", version.ref = "stately" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlinStdlib" }
androidx-runner = { group = "androidx.test", name = "runner", version.ref = "runner" }
androidx-core = { group = "androidx.test", name = "core", version.ref = "core" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junit" }

#back handle
back-handler = { module = "org.jetbrains.compose.ui:ui-backhandler", version.ref = "compose_backhandle" }

# Datastore
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }

# Firebase
firebase-config = { module = "dev.gitlive:firebase-config", version.ref = "firebase" }
firebase-analytic = { module = "dev.gitlive:firebase-analytics", version.ref = "firebase" }
firebase-crashlytics = { module = "dev.gitlive:firebase-crashlytics", version.ref = "firebase" }

#shimmer
compose-shimmer = { module = "com.valentinilk.shimmer:compose-shimmer", version.ref = "composeShimmer" }

#connect internet
connectivity = { module = "dev.jordond.connectivity:connectivity-core", version.ref = "connectivity" }
connectivity-device = { module = "dev.jordond.connectivity:connectivity-device", version.ref = "connectivity" }

#file kit
filekit-dialogs-compose = { module = "io.github.vinceglb:filekit-dialogs-compose", version.ref = "filekit" }
filekit-core = { module = "io.github.vinceglb:filekit-core", version.ref = "filekit" }
build-konfig = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "buildKonfig" }

room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

[plugins]
room = { id = "androidx.room", version.ref = "room" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics_plugin" }
google-service = { id = "com.google.gms.google-services", version.ref = "google-service" }
#build config
buildConfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildConfig" }
jetbrains-kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
android-kotlin-multiplatform-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "agp" }
